/*
Листа од цели броеви помеѓу 1 и 999 е цик цак листа доколку паровите од соседни елементи се наизменично во стриктно опаѓачки и стриктно растечки редослед и првиот пар е во растечки редослед. На пример:


•	1 <-> 5 <-> 1 <-> 5
•	1 <-> 12 <-> 2 <-> 15 <-> 10
•	6 <-> 10 <-> 8 <-> 9 <-> 2 <-> 4 <-> 3
Додека пак следните листи не се цик цак листи.
•	5 <-> 1 <-> 5 <-> 1
•	1 <-> 5 <-> 10 <-> 5 <-> 1
•	5 <-> 10 <-> 7 <-> 5 <-> 7
•	1 <-> 10 <-> 10<-> 1
Секоја листа од цели броеви можеме да ја претвориме во цик цак листа.
На пример, во листите 
•	1 <-> 5 <-> 10 <-> 5 <-> 1
првиот пар кој што не прави наизменична промена е парот 5 <-> 10, кој би требало да е во опаѓачки редослед бидејќи пред него има пар во растечки редослед.
•	5 <-> 10 <-> 7 <-> 5 <-> 7
првиот пар кој што не прави наизменична промена е парот 7 <-> 5, кој би требало да е во растечки редослед бидејќи пред него има пар во опаѓачки редослед.
Кога има пар што е во растечки редослед, а треба да е во опаѓачки, како на пример 5 <-> 10, или пар што е во опаѓачки редослед, а треба да е во растечки, како на пример 7 <-> 5, можеме да го отстраниме јазелот кој што е втор во парот, во овој случај јазелите со вредност 10 во првиот пар и 5 во вториот пар.

Имплементирајте го методот makeZigZag кој што ќе ја трансформира листата аргумент во цик цак листа.


Влез: Во првиот ред од влезот е даден цел број N, кој го претставува бројот на јазли во листата, а потоа во следниот ред N цели броеви одделени со празно место помеѓу 1 и 999. 
Излез: На излез треба да се испечати променетата листа после нејзината трансформација во цик цак листа.
Пример:
Влез:
5
1 5 10 5 1
Излез: 
1 <-> 5 <-> 10 <-> 5 <-> 1
1 <-> 5 <-> 1

Појаснување: отстранети се два јазли, тој со вредност 10 бидејќи не е во опаѓачки редослед со претходниот елемент, и тој со вредност 5 после јазелот со вредност 10, повторно бидејќи не е во опаѓачки редослед со претходниот елемент.

*/
import java.util.*;
public class DLLZigZag{
  public static void main(String [] args){
Scanner input=


  }}
