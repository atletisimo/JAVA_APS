/*–°–µ–∫–æj –∫–∞–Ω–¥–∏–¥–∞—Ç –∫–æj —Å–∞–∫–∞ –¥–∞ —Å–µ –∑–∞–ø–∏—à–µ –Ω–∞ —Ñ–∞–∫—É–ª—Ç–µ—Ç –ø–æ–¥–Ω–µ—Å—É–≤–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω—Å–∫–∞ –ø—Ä–∏j–∞–≤–∞ –Ω–∞ —Å–∏—Å—Ç–µ–º–æ—Ç –∑–∞ —É–ø–∏—Å –Ω–∞ –£–Ω–∏–≤–µ—Ä–∑–∏—Ç–µ—Ç–æ—Ç. –ü–æ—Ç–æ–∞ –∫–æ–º–∏—Å–∏j–∞—Ç–∞ –∑–∞ —É–ø–∏—Å –≥–∏ –ø—Ä–æ–≤–µ—Ä—É–≤–∞
–µ–¥–µ–Ω –ø–æ –µ–¥–µ–Ω –∫–∞–Ω–¥–∏–¥–∞—Ç–∏—Ç–µ –∏ –Ω–∏–≤–Ω–∏—Ç–µ –≤–Ω–µ—Å–µ–Ω–∏ –ø–æ–¥–∞—Ç–æ—Ü–∏, –∞ –ø–æ—Å–µ–±–Ω–æ –≥–æ –ø—Ä–æ–≤–µ—Ä—É–≤–∞
—É—Å–ø–µ—Ö–æ—Ç –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç –æ–¥ —Å—Ä–µ–¥–Ω–æ –≤–æ –∞–ø–ª–∏–∫–∞—Ü–∏j–∞—Ç–∞ –ï-–î–Ω–µ–≤–Ω–∏–∫ (–∫–æj–∞ —Å–æ–¥—Ä–∂–∏ –ø–æ–¥–∞—Ç–æ—Ü–∏ –∑–∞ —Å–∏—Ç–µ —É—á–µ–Ω–∏—Ü–∏ –≤–æ —Å–∏—Ç–µ —Å—Ä–µ–¥–Ω–∏ —É—á–∏–ª–∏—à—Ç–∞ –≤–æ –ú–∞–∫–µ–¥–æ–Ω–∏j–∞). –í–∞—à–∞ –∑–∞–¥–∞—á–∞
–µ –∑–∞ –¥–∞–¥–µ–Ω –∫–∞–Ω–¥–∏–¥–∞—Ç –¥–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç–µ –¥–∞–ª–∏ –µ –≤–∞–ª–∏–¥–µ–Ω –≤–Ω–µ—Å–µ–Ω–∏–æ—Ç –ø—Ä–æ—Å–µ–∫ –æ–¥ —Å—Ä–µ–¥–Ω–æ
—É—á–∏–ª–∏—à—Ç–µ –≤–æ –∞–ø–ª–∏–∫–∞—Ü–∏j–∞—Ç–∞ –∑–∞ —É–ø–∏—Å–∏.
–í–ª–µ–∑: –í–æ –ø—Ä–≤–∞—Ç–∞ –ª–∏–Ω–∏j–∞ –µ –¥–∞–¥–µ–Ω –±—Ä–æj ùëÅ –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∏ –∫–æ–∏ —Å–∞–∫–∞–∞—Ç –¥–∞ —Å–µ –∑–∞–ø–∏—à–∞—Ç
–Ω–∞ —Ñ–∞–∫—É–ª—Ç–µ—Ç. –í–æ –Ω–∞—Ä–µ–¥–Ω–∏—Ç–µ ùëÅ –ª–∏–Ω–∏–∏ —Å–µ –¥–∞–¥–µ–Ω–∏ –º–∞—Ç–∏—á–Ω–∏—Ç–µ –±—Ä–æ–µ–≤–∏ –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∏—Ç–µ
–∏ –ø—Ä–æ—Å–µ–∫ –æ–¥ —Å—Ä–µ–¥–Ω–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–æj –≥–æ –≤–Ω–µ–ª–µ –≤–æ –∞–ø–ª–∏–∫–∞—Ü–∏j–∞—Ç–∞ –∑–∞ —É–ø–∏—Å–∏. –ü–æ—Ç–æ–∞
–µ –¥–∞–¥–µ–Ω –±—Ä–æj ùëÄ –Ω–∞ –ø–æ–¥–∞—Ç–æ—Ü–∏ –≤–æ –ï-–î–Ω–µ–≤–Ω–∏–∫. –í–æ –Ω–∞—Ä–µ–¥–Ω–∏—Ç–µ ùëÄ –ª–∏–Ω–∏–∏ —Å–µ –¥–∞–¥–µ–Ω–∏
–º–∞—Ç–∏—á–Ω–∏—Ç–µ –±—Ä–æ–µ–≤–∏ –Ω–∞ —Å—Ä–µ–¥–Ω–æ—à–∫–æ–ª—Ü–∏—Ç–µ –∏ –Ω–∏–≤–Ω–∏–æ—Ç –≤–∏—Å—Ç–∏–Ω—Å–∫–∏ –ø—Ä–æ—Å–µ–∫ –æ–¥ —Å—Ä–µ–¥–Ω–æ
–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ. –í–æ –ø–æ—Å–ª–µ–¥–Ω–∏–æ—Ç —Ä–µ–¥ –µ –¥–∞–¥–µ–Ω –º–∞—Ç–∏—á–Ω–∏–æ—Ç –±—Ä–æj –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç —á–∏j –ø—Ä–æ—Å–µ–∫
—Ç—Ä–µ–±–∞ –¥–∞ —Å–µ –ø—Ä–æ–≤–µ—Ä–∏.
–ò–∑–ª–µ–∑: –î–∞ —Å–µ –∏—Å–ø–µ—á–∞—Ç–∏ –¥–∞–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç —Å–æ –¥–∞–¥–µ–Ω–∏–æ—Ç –º–∞—Ç–∏—á–µ–Ω –±—Ä–æj –≥–æ –≤–Ω–µ–ª
—Ç–æ—á–Ω–∏–æ—Ç –ø—Ä–æ—Å–µ–∫ –æ–¥ —Å—Ä–µ–¥–Ω–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (‚ÄûOK‚Äù), –¥–∞–ª–∏ –ø—Ä–æ—Å–µ–∫–æ—Ç –µ –ø–æ–≥—Ä–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω
(‚ÄûError‚Äù) –∏–ª–∏ –ø–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç –≤–æ–æ–ø—à—Ç–æ –≥–æ –Ω–µ–º–∞ –≤–æ –ï-–î–Ω–µ–≤–Ω–∏–∫ (‚ÄûEmpty‚Äù).
–ü—Ä–∏–º–µ—Ä 1:
–í–ª–µ–∑:
2
0610992333666 5.0
0901993222233 4.78
231
–ü–æ–¥–∞—Ç–æ—á–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
4
2205990121212 2.45
0901993222233 4.68
0610992333666 5.0
1511989984256 3.45
0901993222233
–ò–∑–ª–µ–∑:
Error
//–∏–ª–∏ OK –¥–æ–∫–æ–ª–∫—É –µ –û–ö
*/
//–°–µ–∫–æ–≥–∞—à –∫–æ–≥–∞ –∏–º–∞–º–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ—ò —Å–µ —Å–æ—Å—Ç–æ–∏ –æ–¥ —Ü–∏—Ñ—Ä–∏, –Ω–æ –≤–æ–¥–µ—á–∫–∏—Ç–µ –Ω—É–ª–∏ —Å–µ –≤–∞–∂–Ω–∏ ‚Üí —á—É–≤–∞–º–µ –≥–æ –∫–∞–∫–æ String, –∞ –Ω–µ int/long.

//int/long —Å–µ –∫–æ—Ä–∏—Å—Ç–∞—Ç —Å–∞–º–æ –∑–∞ –±—Ä–æ—ò–∫–∏ –∑–∞ –∞—Ä–∏—Ç–º–µ—Ç–∏—á–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏, –Ω–µ –∑–∞ ID.

import java.util.Scanner;

public class FacultyEnrollment {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // 1. –í—á–∏—Ç—É–≤–∞—ö–µ –±—Ä–æ—ò –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∏
        int N = Integer.parseInt(sc.nextLine());//–ü—Ä–≤–∞—Ç–∞ –ª–∏–Ω–∏—ò–∞ –æ–¥ –≤–ª–µ–∑–æ—Ç –Ω–∏ –∫–∞–∂—É–≤–∞ –∫–æ–ª–∫—É –∫–∞–Ω–¥–∏–¥–∞—Ç–∏ —ú–µ –≤–Ω–µ—Å–µ–º–µ.
       //sc.nextLine() –≤—á–∏—Ç—É–≤–∞ —Ä–µ–¥ –∫–∞–∫–æ String, Integer.parseInt –≥–æ –ø—Ä–µ—Ç–≤–æ—Ä–∞ –≤–æ –±—Ä–æ—ò –∏—Å—Ç–æ –∫–∞–∫–æ int N=sc.nextInt(); sc.nextLine();

        // 2. –ö—Ä–µ–∏—Ä–∞—ö–µ hash —Ç–∞–±–µ–ª–∞ –∑–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∏—Ç–µ
        OBHT<String, Double> candidates = new OBHT<>(2 * N);//–ö—Ä–µ–∏—Ä–∞–º–µ OBHT —Å–æ 2*N –∫–æ—Ñ–∏—á–∫–∏ ‚Üí –∑–∞ –¥–∞ –∏–º–∞–º–µ –¥–æ–≤–æ–ª–Ω–æ —Å–ª–æ–±–æ–¥–Ω–∏ –º–µ—Å—Ç–∞ –∏ –ø–æ–º–∞–ª–∏ —à–∞–Ω—Å–∏ –∑–∞ collision.
       //–ö–ª—É—á–æ—Ç –µ String (–º–∞—Ç–∏—á–µ–Ω –±—Ä–æ—ò), –≤—Ä–µ–¥–Ω–æ—Å—Ç–∞ –µ Double (–ø—Ä–æ—Å–µ–∫).

        // 3. –í—á–∏—Ç—É–≤–∞—ö–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∏ –∏ –Ω–∏–≤–Ω–∏—Ç–µ –≤–Ω–µ—Å–µ–Ω–∏ –ø—Ä–æ—Å–µ—Ü–∏
        for (int i = 0; i < N; i++) {
            String[] parts = sc.nextLine().split(" "); // –¥–µ–ª–∏–º–µ —Ä–µ–¥ –ø–æ –ø—Ä–∞–∑–Ω–æ –º–µ—Å—Ç–æ
            String pin = parts[0];                     // –º–∞—Ç–∏—á–µ–Ω –±—Ä–æ—ò
            double avg = Double.parseDouble(parts[1]); // –≤–Ω–µ—Å–µ–Ω –ø—Ä–æ—Å–µ–∫
            candidates.insert(pin, avg);               // –≤–Ω–µ—Å—É–≤–∞–º–µ –≤–æ hash —Ç–∞–±–µ–ª–∞
        }

        // 4. –í—á–∏—Ç—É–≤–∞—ö–µ –±—Ä–æ—ò –Ω–∞ –∑–∞–ø–∏—Å–∏ –≤–æ –ï-–î–Ω–µ–≤–Ω–∏–∫
        int M = Integer.parseInt(sc.nextLine());

        // 5. –ö—Ä–µ–∏—Ä–∞—ö–µ hash —Ç–∞–±–µ–ª–∞ –∑–∞ –ï-–î–Ω–µ–≤–Ω–∏–∫
        OBHT<String, Double> gradebook = new OBHT<>(2 * M);
      //–ò—Å—Ç–æ—Ç–æ –∫–∞–∫–æ –∫–∞—ò –∫–∞–Ω–¥–∏–¥–∞—Ç–∏—Ç–µ.–û–≤–∞–∞ —Ç–∞–±–µ–ª–∞ —ú–µ —Å–æ–¥—Ä–∂–∏ –≤–∏—Å—Ç–∏–Ω—Å–∫–∏ –ø—Ä–æ—Å–µ–∫ –æ–¥ –ï-–î–Ω–µ–≤–Ω–∏–∫

        // 6. –í—á–∏—Ç—É–≤–∞—ö–µ –º–∞—Ç–∏—á–Ω–∏ –±—Ä–æ–µ–≤–∏ –∏ –≤–∏—Å—Ç–∏–Ω—Å–∫–∏ –ø—Ä–æ—Å–µ—Ü–∏ –æ–¥ –ï-–î–Ω–µ–≤–Ω–∏–∫
        for (int i = 0; i < M; i++) {
            String[] parts = sc.nextLine().split(" ");
            String pin = parts[0];
            double realAvg = Double.parseDouble(parts[1]);
            gradebook.insert(pin, realAvg);//insert –≥–∏ —Ö–µ—à–∏—Ä–∞ –∏ –¥–æ–¥–∞–≤–∞ –≤–æ gradebook.–¶–µ–ª—Ç–∞: –¥–∞ –º–æ–∂–µ–º–µ –¥–∞ –ø—Ä–æ–≤–µ—Ä–∏–º–µ –¥–∞–ª–∏ –≤–Ω–µ—Å–µ–Ω–∏–æ—Ç –ø—Ä–æ—Å–µ–∫ –µ —Ç–æ—á–µ–Ω
        }

        // 7. –í—á–∏—Ç—É–≤–∞—ö–µ –º–∞—Ç–∏—á–µ–Ω –±—Ä–æ—ò –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç –∫–æ—ò —Ç—Ä–µ–±–∞ –¥–∞ —Å–µ –ø—Ä–æ–≤–µ—Ä–∏
        String PIN = sc.nextLine();//–û–≤–æ—ò —Ä–µ–¥ –µ –º–∞—Ç–∏—á–Ω–∏–æ—Ç –±—Ä–æ—ò –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç –∫–æ—ò —Ç—Ä–µ–±–∞ –¥–∞ —Å–µ –ø—Ä–æ–≤–µ—Ä–∏

        // 8. –ü—Ä–µ–±–∞—Ä—É–≤–∞—ö–µ –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç –≤–æ hash —Ç–∞–±–µ–ª–∞—Ç–∞
        int candIndex = candidates.search(PIN);//–ø—Ä–µ–±–∞—Ä—É–≤–∞ –≤–æ hash —Ç–∞–±–µ–ª–∞—Ç–∞ candidates –¥–∞–ª–∏ –º–∞—Ç–∏—á–Ω–∏–æ—Ç –±—Ä–æ—ò PIN –ø–æ—Å—Ç–æ–∏.
        if (candIndex != -1) { // –∞–∫–æ –ø–æ—Å—Ç–æ–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç,search –ø—Ä–æ–≤–µ—Ä—É–≤–∞ –¥–∞–ª–∏ –º–∞—Ç–∏—á–Ω–∏–æ—Ç –±—Ä–æ—ò –ø–æ—Å—Ç–æ–∏ –≤–æ candidates,–í—Ä–∞—ú–∞ –∏–Ω–¥–µ–∫—Å –Ω–∞ bucket –∞–∫–æ –ø–æ—Å—Ç–æ–∏, -1 –∞–∫–æ –Ω–µ –ø–æ—Å—Ç–æ–∏
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç –ø–æ—Å—Ç–æ–∏ –≤–æ –ª–∏—Å—Ç–∞—Ç–∞ –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∏:–î–∞ ‚Üí –ø—Ä–æ–¥–æ–ª–∂—É–≤–∞–º–µ —Å–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å–µ–∫,–ù–µ ‚Üí System.out.println("Empty")
//‚úÖ –ó–Ω–∞—á–∏, –∞–∫–æ candIndex == -1 ‚Üí –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç –≤–æ–æ–ø—à—Ç–æ –Ω–µ —Å–µ –ø—Ä–∏—ò–∞–≤–∏–ª ‚Üí Empty
          int gradeIndex = gradebook.search(PIN);
            if (gradeIndex != -1) { // –∞–∫–æ –ø–æ—Å—Ç–æ–∏ –∏ –≤–æ –ï-–î–Ω–µ–≤–Ω–∏–∫
                double candAvg = candidates.getBucket(candIndex).value;  // –≤–Ω–µ—Å–µ–Ω –ø—Ä–æ—Å–µ–∫,–≤—Ä–∞—ú–∞ MapEntry –æ–¥ hash —Ç–∞–±–µ–ª–∞—Ç–∞ –Ω–∞ –∏–Ω–¥–µ–∫—Å–æ—Ç candIndex
                double realAvg = gradebook.getBucket(gradeIndex).value;  // –≤–∏—Å—Ç–∏–Ω—Å–∫–∏ –ø—Ä–æ—Å–µ–∫
                if (candAvg == realAvg) {
                    System.out.println("OK"); // —Ç–æ—á–µ–Ω –≤–Ω–µ—Å–µ–Ω –ø—Ä–æ—Å–µ–∫
                } else {
                    System.out.println("Error"); // –ø–æ–≥—Ä–µ—à–µ–Ω –≤–Ω–µ—Å–µ–Ω –ø—Ä–æ—Å–µ–∫
                }
            } else {
                System.out.println("Empty"); // –Ω–µ–º–∞ –≥–æ –Ω–µ–º–∞ –≤–æ –ï-–î–Ω–µ–≤–Ω–∏–∫
            }
        } else {
            System.out.println("Empty"); // –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç –Ω–µ –ø–æ—Å—Ç–æ–∏ –≤–æ –ª–∏—Å—Ç–∞—Ç–∞
        }

        sc.close(); // –∑–∞—Ç–≤–æ—Ä–∞–º–µ Scanner
    }
}
/*
<String, Double> ‚Üí –û–≤–∞ —Å–µ generic —Ç–∏–ø–æ–≤–∏:

String ‚Üí —Ç–∏–ø–æ—Ç –Ω–∞ key (–∫–ª—É—á–æ—Ç)

Double ‚Üí —Ç–∏–ø–æ—Ç –Ω–∞ value (–≤—Ä–µ–¥–Ω–æ—Å—Ç–∞)

–í–æ –Ω–∞—à–∞—Ç–∞ –∑–∞–¥–∞—á–∞:

key = –º–∞—Ç–∏—á–µ–Ω –±—Ä–æ—ò –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ—Ç (—Å–µ —á—É–≤–∞ –∫–∞–∫–æ String, –∑–∞—Ç–æ–∞ —à—Ç–æ MAT –±—Ä–æ—ò –µ 13 —Ü–∏—Ñ—Ä–∏, –Ω–æ –Ω–µ —Ç—Ä–µ–±–∞ –¥–∞ —Å–µ —Ç—Ä–µ—Ç–∏—Ä–∞ –∫–∞–∫–æ –±—Ä–æ—ò –∑–∞ –∞—Ä–∏—Ç–º–µ—Ç–∏—á–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏)

value = –ø—Ä–æ—Å–µ–∫ –æ–¥ —Å—Ä–µ–¥–Ω–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (Double, –∑–∞—Ç–æ–∞ —à—Ç–æ –µ –¥–µ—Å–µ—Ç–∏—á–Ω–∞ –≤—Ä–µ–¥–Ω–æ—Å—Ç –∫–∞–∫–æ 4.78, 5.0 –∏ —Å–ª.)

candidates = new OBHT<>(2 * N) ‚Üí –∫—Ä–µ–∏—Ä–∞–º–µ hash —Ç–∞–±–µ–ª–∞ —Å–æ –¥–≤–æ—ò–Ω–æ –ø–æ–≤–µ—ú–µ –∫–æ—Ñ–∏—á–∫–∏ –æ–¥ –±—Ä–æ—ò–æ—Ç –Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∏, –∑–∞ –¥–∞ –∏–º–∞–º–µ –¥–æ–≤–æ–ª–Ω–æ —Å–ª–æ–±–æ–¥–Ω–∏ –ø–æ–∑–∏—Ü–∏–∏ –∏ –ø–æ–º–∞–ª–∏ —à–∞–Ω—Å–∏ –∑–∞ collision.

parts[0] ‚Üí –¥–µ–ª–æ—Ç –æ–¥ —Ä–µ–¥–æ—Ç –∫–æ—ò –¥–æ–∞—ì–∞ –ø—Ä–µ–¥ –ø—Ä–≤–æ—Ç–æ –ø—Ä–∞–∑–Ω–æ –º–µ—Å—Ç–æ

–ü—Ä–∏–º–µ—Ä: —Ä–µ–¥–æ—Ç "0610992333666 5.0" ‚Üí split(" ") –ø—Ä–∞–≤–∏ –Ω–∏–∑–∞: ["0610992333666", "5.0"]

parts[0] = "0610992333666" ‚Üí –º–∞—Ç–∏—á–µ–Ω –±—Ä–æ—ò, —Å–µ —á—É–≤–∞ –∫–∞–∫–æ String, –∑–∞—Ç–æ–∞ —à—Ç–æ:

–ù–µ –Ω–∏ —Ç—Ä–µ–±–∞ –¥–∞ –ø—Ä–∞–≤–∏–º–µ –∞—Ä–∏—Ç–º–µ—Ç–∏–∫–∞ —Å–æ –Ω–µ–≥–æ

–î–æ–ª–≥–æ –µ –∏ –∏–º–∞ –≤–æ–¥–µ—á–∫–∏ –Ω—É–ª–∏, –ø–∞ –∞–∫–æ –≥–æ —Å—Ç–∞–≤–∏–º–µ –∫–∞–∫–æ int/long, –Ω—É–ª–∏—Ç–µ —ú–µ —Å–µ –∏–∑–≥—É–±–∞—Ç
double avg = Double.parseDouble(parts[1]);

parts[1] ‚Üí –¥–µ–ª–æ—Ç –æ–¥ —Ä–µ–¥–æ—Ç –∫–æ—ò –µ –ø—Ä–æ—Å–µ–∫–æ—Ç –æ–¥ —Å—Ä–µ–¥–Ω–æ

Double.parseDouble(parts[1]) ‚Üí –ø—Ä–µ—Ç–≤–æ—Ä–∞ String "5.0" –≤–æ Double 5.0

–ü–æ—Ç—Ä–µ–±–Ω–æ –µ –∑–∞ –¥–∞ –º–æ–∂–µ–º–µ –¥–∞ –≥–æ —Å–ø–æ—Ä–µ–¥–∏–º–µ –∏–ª–∏ —á—É–≤–∞ –≤–æ hash —Ç–∞–±–µ–ª–∞ –∫–∞–∫–æ –±—Ä–æ—ò

‚úÖ –ó–Ω–∞—á–∏, –Ω–∞ –∫—Ä–∞—ò:

pin = "0610992333666" ‚Üí key –≤–æ hash —Ç–∞–±–µ–ª–∞—Ç–∞

avg = 5.0 ‚Üí value –≤–æ hash —Ç–∞–±–µ–ª–∞—Ç–∞

*/
