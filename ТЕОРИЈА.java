АЛГОРИТАМ-процедура за решавање на одреден проблем
  Алгоритмите треба да бидат:
• Коректни
• Ефикасни
• Лесни за имплементација

Информациите кои треба да бидат процесирани од страна на програмата се чуваат во податочни структури - data structures
  
Податочните структури може да бидат
 Статични
• промени само на вредностите
• низи (arrays) или записи (records))
 Динамички
• промени и во изгледот, големината
• магацини (stacks), листи (lists), дрва (trees), датотеки (files))

Нотации
О-нотација- Горна граница на времето на извршување на алгоритамот. Ја мери комплексноста (сложеноста) во најлош случај.
Ω-нотација-Долна граница на времето на извршување на алгоритамот. Ја мери комплексноста (сложеноста) во најдобар случај (не е многу корисно).
θ-нотација-Долна и горна граница на времето на извршување на алгоритамот.Се користи при истражување во полето на анализа на алгоритми 

  ЛИНЕАРНИ ПОДАТОЧНИ СТРУКТУРИ
  •array
  •linked lists
  •stack
  •queue
  •hash tables

  НЕ-ЛИНЕРАЛНИ ПОДАТОЧНИ СТРУКТУРИ
  •tree
  •graph

  НИЗИ
  •последователно множество на мемориски локации
  •множество на подредени парови(индекс,вредност)
  •пристап до вредност на низа со нејзиниот индекс во O(1) време
  •статички структури,нивната големина е фиксна и не може да се промени после нивната декларација
  •чуваат елементи од ист тип под заедничко име
  •бришење O(n), во најдобар случај е бришење на првиот индекс O(1),во најлош случај бришење на последниот индекс O(n)
  •пребарување O(n) во општ случај
  
СЕ ЈАВУВА ПОТРЕБА ОД ДИНАМИЧКИ СТРУКТУРИ,за разлика од обичните низи тука спаѓаат ArrayList во JAVA,vector во C++
•автоматски растат во должина кога се обидуваме да направиме внес на нов елемент

  SLL-ЕДНОСТРАНО ПОВРЗАНИ ЛИСТИ
  •подреденоста на елементите е запазена,но нема потреба да има мемориски континуитет
  •sll множество на подредени елементи ,каде секој елемент е опишан со вредност на јазелот(теме)(data) и покажувач кон следниот јазел (link)
  •секој јазел освен последниот има наследник
  •секој јазел освен првиот има претходник
  •должина на листа=број на јазли 
  •додавањето и бришењето на елемент е поедноставно отколку кај низите 
  •потребна е дополнителна меморија за чување на покажувачите(следбениците) кои реално не носат корисна информација

  DLL-ДВОЈНО ПОВРЗАНИ ЛИСТИ 
  •јазелот ќе биде составен од data поле и 2 покажувачи ,кон следниот елемент и кон претходниот елемент 
  
АЛГОРИТМИ

•ТЕХНИКА НА ГРУБА СИЛА
-наједноставна техника за решавање проблеми
-ги испитува сите можни случаи
-гарантира дека ќе најде резултат

•АЛЧНИ АЛГОРИТМИ (GREEDY)
-секогаш го бараат локалното оптимално решение 
-го избира најдоброто што е достапно во моментот
-најчесто даваат коректно решение,но само за дел од доменот
-работат релативно брзо
•Постојат 2 верзии на алгоритмот:
  •не се знае следната големина на пакетот во низата се додека тековниот не се смести во некој ранец
  •познати се по големина сите пакети однапред

  
  
