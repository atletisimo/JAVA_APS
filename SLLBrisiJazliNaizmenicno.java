package listi;
import java.util.*;

public class SLLBrisiJazliNaizmenicno {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        SLL<Integer> lista = new SLL<Integer>();
        for (int i = 0; i < n; i++) {
            lista.insertLast(input.nextInt());
        }

        SLLNode<Integer> jazol = lista.getFirst();
        SLLNode<Integer> prev = null;
        int counter = 1;

        while (jazol != null) {
            // –ß–µ–∫–æ—Ä 1: –û—Å—Ç–∞–≤–∏ `counter` —ò–∞–∑–ª–∏,–ü–æ–º–∏–Ω–∏ counter —ò–∞–∑–ª–∏, —Ç.–µ. –æ—Å—Ç–∞–≤–∏ –≥–∏ (–Ω–µ –≥–∏ –±—Ä–∏—à–∏).
            for (int i = 0; i < counter && jazol != null; i++) {//–ú–æ–∂–µ –¥–∞ —Å–µ —Å–ª—É—á–∏ jazol –¥–∞ —Å—Ç–∞–Ω–µ null (–∞–∫–æ —Å–º–µ –¥–æ—à–ª–µ –¥–æ –∫—Ä–∞—ò–æ—Ç –Ω–∞ –ª–∏—Å—Ç–∞—Ç–∞).
//–ó–∞—Ç–æ–∞, –ø—Ä–µ–¥ –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏–º–µ –Ω–µ—à—Ç–æ —Å–æ jazol, –∫–∞–∫–æ –Ω–∞ –ø—Ä–∏–º–µ—Ä lista.delete(jazol);, –º–æ—Ä–∞–º–µ –¥–∞ –ø—Ä–æ–≤–µ—Ä–∏–º–µ –¥–∞–ª–∏ —Ç–æ—ò —É—à—Ç–µ –ø–æ—Å—Ç–æ–∏, –∑–∞ –¥–∞ –Ω–µ –¥–æ–±–∏–µ–º–µ NullPointerException.
                prev = jazol;
                jazol = jazol.succ;
            }

            // –ß–µ–∫–æ—Ä 2: –ò–∑–±—Ä–∏—à–∏ —Å–ª–µ–¥–Ω–∏–æ—Ç (–∞–∫–æ –ø–æ—Å—Ç–æ–∏)
            if (jazol != null) {
                lista.delete(jazol);
                //–ø–æ—à—Ç–æ –µ –∏–∑–±—Ä–∏—à–∞–Ω, jazol –Ω–µ –ø–æ—Å—Ç–æ–∏ –ø–æ–≤–µ—ú–µ ‚Äî –Ω–µ –º–æ–∂–µ—à –¥–∞ –∫–æ—Ä–∏—Å—Ç–∏—à jazol = jazol.succ!
                jazol = prev.succ; // –ø—Ä–æ–¥–æ–ª–∂–∏ –æ–¥ —Å–ª–µ–¥–Ω–∏–æ—Ç
              
//–±–∏–¥–µ—ò—ú–∏ prev —Å√® —É—à—Ç–µ –µ –≤–æ –ª–∏—Å—Ç–∞—Ç–∞, –∞ —Å–ª–µ–¥–Ω–∏–æ—Ç –ø–æ prev –µ –Ω–æ–≤–∏–æ—Ç jazol, –æ–¥–Ω–æ—Å–Ω–æ –æ–Ω–æ—ò –ø–æ—Å–ª–µ –∏–∑–±—Ä–∏—à–∞–Ω–∏–æ—Ç.
            }

            counter++;
        }

        if (lista.getFirst() == null)
            System.out.println("Prazna lista");
        else
            System.out.println(lista);
    }
}
//–í–æ –µ–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∞ –ª–∏—Å—Ç–∞ –Ω–µ–º–∞–º–µ –ø–æ–∫–∞–∂—É–≤–∞—á –Ω–∞–Ω–∞–∑–∞–¥. 
//–ö–æ–≥–∞ –ø–æ–¥–æ—Ü–Ω–∞ —ú–µ —Ç—Ä–µ–±–∞ –¥–∞ –∏–∑–±—Ä–∏—à–µ–º–µ –Ω–µ–∫–æ—ò —ò–∞–∑–æ–ª, –º–æ—Ä–∞ –¥–∞ –∑–Ω–∞–µ–º–µ –∫–æ—ò –µ —ò–∞–∑–æ–ª–æ—Ç –ø—Ä–µ–¥ –Ω–µ–≥–æ, –∑–∞ –¥–∞ –≥–∏ —Å–≤—Ä–∑–µ–º–µ –æ—Å—Ç–∞—Ç–æ–∫–æ—Ç –æ–¥ –ª–∏—Å—Ç–∞—Ç–∞ (prev.succ = jazol.succ).
//–ü—Ä–≤–∏–æ—Ç while
/*
while (jazol != null)?
–û–≤–∞ –µ –≥–ª–∞–≤–Ω–∞—Ç–∞ while-–ø–µ—Ç—ô–∞. –¢–∞–∞ —Å–µ –∫–æ—Ä–∏—Å—Ç–∏ –∑–∞ –¥–∞ —Å–µ –¥–≤–∏–∂–∏–º–µ –Ω–∏–∑ —Å–∏—Ç–µ –µ–ª–µ–º–µ–Ω—Ç–∏ –æ–¥ –ª–∏—Å—Ç–∞—Ç–∞. –ó–Ω–∞—á–∏:
–î–æ–¥–µ–∫–∞ –∏–º–∞ —É—à—Ç–µ —ò–∞–∑–ª–∏ –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ (jazol != null), —Ü–∏–∫–ª—É—Å–æ—Ç –ø—Ä–æ–¥–æ–ª–∂—É–≤–∞.
–ê–∫–æ jazol –µ null, —Ç–æ–≥–∞—à —Å–º–µ –Ω–∞ –∫—Ä–∞—ò–æ—Ç –Ω–∞ –ª–∏—Å—Ç–∞—Ç–∞ –∏ —Ç—Ä–µ–±–∞ –¥–∞ –ø—Ä–µ–∫–∏–Ω–µ–º–µ.
n=7
1 ‚Üí 2 ‚Üí 3 ‚Üí 4 ‚Üí 5 ‚Üí 6 ‚Üí 7

// prev = jazol;//1
    jazol = jazol.succ;    // jazol = 2
–∞–∫–æ (jazol!=null)
–≥–æ –±—Ä–∏—à–µ–º–µ,–∑–Ω–∞—á–∏ 2 —ò–∞ –±—Ä–∏—à–µ–º–µ
// delete 2
    jazol = prev.succ;           // jazol = 3,—Å–µ–≥–∞ –Ω–∞ –ø—Ä–µ—Ç—Ö–æ–¥–Ω–∏–∫–æ—Ç,—Å–ª–µ–¥–µ–Ω–∏–∫–æ—Ç —ú–µ –±–∏–¥–µ –º–æ–º–µ–Ω—Ç–∞–ª–Ω–∏–æ—Ç —ò–∞–∑–æ–ª
    1 ‚Üí 3 ‚Üí 4 ‚Üí 5 ‚Üí 6 ‚Üí 7


–í–¢–û–†–ê –ò–¢–ï–†–ê–¶–ò–à–ê
for (int i = 0; i < 2 && jazol != null; i++) {
    prev = jazol;          // prev = 3
    jazol = jazol.succ;    // jazol = 4
    ---
    prev = 4
    jazol = 5
}
–°–µ–≥–∞:

prev = 4

jazol = 5


if (jazol != null) {
    lista.delete(jazol);     // delete 5
    jazol = prev.succ;       // jazol = 6
}
1 ‚Üí 3 ‚Üí 4 ‚Üí 6 ‚Üí 7

–¢–†–ï–¢–ê –ò–¢–ï–†–ê–¶–ò–à–ê 
for (int i = 0; i < 3 && jazol != null; i++) {
    prev = jazol;        // prev = 6
    jazol = jazol.succ;  // jazol = 7
    ---
    prev = 7
    jazol = null
}
–°–µ–≥–∞ —Å–º–µ –Ω–∞ –∫—Ä–∞—ò–æ—Ç.

Edit
if (jazol != null) {   // jazol = null -> –Ω–µ –≤–ª–µ–≥—É–≤–∞ —Ç—É–∫–∞
}
üö´ –ù–∏—à—Ç–æ –Ω–µ —Å–µ –±—Ä–∏—à–µ.

‚úÖ –§–∏–Ω–∞–ª–µ–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç:
–õ–∏—Å—Ç–∞—Ç–∞:
1 ‚Üí 3 ‚Üí 4 ‚Üí 6 ‚Üí 7
*/
